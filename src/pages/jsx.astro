---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.tsx';
import Button from '../components/Button.tsx';

import { Markdown } from 'astro-remote';


const DATO_API_TOKEN = 'bb82b0f655a934b55179f8bc60a4b7';

const graphqlRequest = {
  query: `
    	query {
				datoPage: pageUnique(filter: {url: {eq: "/test-page"}}) {
					url
					content {
						entryId
						content
					}
				}
			}
    `,
};

// We can use `await` directly because there is an `async` wrapping this component
const response = await fetch(
  'https://graphql.datocms.com/',
  {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
      'Authorization': `Bearer ${DATO_API_TOKEN}`,
			"X-Include-Drafts": "true",
    },
    body: JSON.stringify(
      graphqlRequest
    ),
  }
).then((res) => res.json())

const res = await response.data.datoPage.content[1].content;
console.log("MARKDOWN: ", res)

---


<Layout title="Fetching Remote + JSX">
	<main>
		<Markdown content={res} sanitize={{ allowComponents: true }} components={{ Button }} />
    <!-- <Hero content={res} /> -->
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
</style>